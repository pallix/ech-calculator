// Generated by psc version 0.10.1
"use strict";
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var mapRight = function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Either line 21, column 1 - line 21, column 29: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var mapLeft = function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v(v1.value0));
        };
        if (v1 instanceof Right) {
            return new Right(v1.value0);
        };
        throw new Error("Failed pattern match at Either line 16, column 1 - line 16, column 32: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var bind = function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return v1(v.value0);
        };
        throw new Error("Failed pattern match at Either line 26, column 1 - line 26, column 25: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
module.exports = {
    Left: Left, 
    Right: Right, 
    bind: bind, 
    mapLeft: mapLeft, 
    mapRight: mapRight
};
